<configuration scan="true" scanPeriod=" 5 seconds" debug="false">
    <springProperty scope="context" name="logPath" source="log.dir" defaultValue="logs"/>
    <springProperty scope="context" name="logLevel" source="log.level" defaultValue="info"/>
    <!-- 日志根目录，/data/logs/${应用名} -->
    <property name="log.path" value="${logPath}"/>
    <!-- 应用 日志输出级别 -->
    <property name="log.level" value="${logLevel}"/>
    <!-- 日志存放路径 -->
    <!-- 日志输出格式 -->
	<property name="log.pattern"  value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%boldYellow(%thread)] [%X{requestId}] %highlight(%-5level) %boldGreen(%logger{15}) - %msg %n"/>
    <!--日志文件保留最大天数-->
    <property name="MAXDAY" value="7"/>

    <!--日志文件滚动阈值-->
    <property name="MAXSIZE" value="200MB"/>
	<!-- 控制台输出 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.JaninoEventEvaluator">
                <expression> return event.getThreadName().contains("JobFailMonitorHelper")
                    ||event.getThreadName().contains("JobScheduleHelper")
                    ||event.getThreadName().contains("JobScheduleHelper")
                    ||event.getThreadName().contains("2JobTriggerPoolHelper");
                </expression>
            </evaluator>
            <OnMatch>DENY</OnMatch>
            <OnMismatch>ACCEPT</OnMismatch>
        </filter>
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
	</appender>

	<!-- 系统日志输出 -->
	<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
	    <file>${log.path}/root.log</file>
        <!-- 循环政策：基于时间创建日志文件 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
			<fileNamePattern>${log.path}/%d{yyyy-MM-dd}/root.%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <maxFileSize>${MAXSIZE}</maxFileSize>
            <maxHistory>${MAXDAY}</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>${log.pattern}</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>INFO</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
	</appender>

	<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
	    <file>${log.path}/error.log</file>
        <!-- 循环政策：基于时间创建日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${log.path}/%d{yyyy-MM-dd}/error.%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <maxFileSize>${MAXSIZE}</maxFileSize>
            <maxHistory>${MAXDAY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>ERROR</level>
			<!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
			<!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

	<!-- 用户访问日志输出  -->
    <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.path}/user.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${log.path}/%d{yyyy-MM-dd}/user.%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <maxFileSize>${MAXSIZE}</maxFileSize>
            <maxHistory>${MAXDAY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>

	<!-- 系统模块日志级别控制  -->
	<logger name="com.smartcoding" level="debug" />
	<logger name="com.smartcoding.schedule.mapper.SmartJobGroupMapper" level="info" />
	<!-- Spring日志级别控制  -->
	<logger name="org.springframework" level="warn" />
    <logger name="druid.sql.Statement" level="info"/>
    <!--<logger name="druid.sql.Connection" level="info"/>-->
    <logger name="druid.sql.ResultSet" level="info"/>
    <logger name="org.apache.http" level="info"/>
    <logger name="org.mybatis.spring" level="info"/>
    <logger name="com.ibatis" level="DEBUG" />
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />
    <logger name="java.sql.Connection" level="DEBUG" />
    <logger name="java.sql.Statement" level="DEBUG" />
    <logger name="java.sql.PreparedStatement" level="DEBUG" />
    <logger name="java.sql.ResultSet" level="DEBUG" />
	<!--<root level="info">-->
		<!--<appender-ref ref="console" />-->
	<!--</root>-->

	<!--&lt;!&ndash;系统操作日志&ndash;&gt;-->
    <!--<root level="info">-->
        <!--<appender-ref ref="file_info" />-->
        <!--<appender-ref ref="file_error" />-->
    <!--</root>-->

	<!--&lt;!&ndash;系统用户操作日志&ndash;&gt;-->
    <!--<logger name="sys-user" level="info">-->
        <!--<appender-ref ref="sys-user"/>-->
    <!--</logger>-->
    <springProfile name="dev">
        <root level="${log.level}">
            <appender-ref ref="console" />
            <appender-ref ref="file_info" />
            <appender-ref ref="file_error" />
            <appender-ref ref="sys-user"/>
        </root>
    </springProfile>
    <springProfile name="!dev">
        <root level="${log.level}">
            <appender-ref ref="file_info" />
            <appender-ref ref="file_error" />
            <appender-ref ref="sys-user"/>
        </root>
    </springProfile>
</configuration>
